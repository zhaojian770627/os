TCB基地址 0x100000
LDT基地址 0x100048  登记在TCB 0x0c 处4字节 选择子 0x60 登记LDT选择子到TCB 0x10
用户程序基地址 0x1000e8 登记在TCB 0x06 4b
用户程序头部段选择子 0x07 TCB 0x44 同时登记到程序头部 0x04
用户程序代码段选择子 0x0f              登记到程序头部 0x14
用户程序代码段选择子 0x17              登记到程序头部 0x1c
用户堆栈段地址 0x1008e8 选择子 0x1f    登记到程序头部 0x08
0级特权堆栈基地址  0x1028e8            登记在TCB 0x1e 选择子 0x24 登记在 TCB 0x22  ESP 0 登记在 TCB 0x24
1级特权堆栈基地址  0x1038e8            登记在TCB 0x2c 选择子 0x2d 登记在 TCB 0x30  ESP 0 登记在 TCB 0x32
2级特权堆栈基地址  0x1048e8            登记在TCB 0x3a 选择子 0x36 登记在 TCB 0x3e  ESP 0 登记在 TCB 0x40

TSS  界限值 0x68 登记到TCB 0x12 选择子 68 登记在 TCB 0x18



0x41313 进入内核
0x41409 进入load_relocate_program
--0x4114e 比较结束	
--0x41240 创建TSS
0x40fea 加载用户程序 
0x100850 进入用户程序
0x10089c 从用户程序返回
------------------------------------------------------------
CR3 creg
查看线性地址对应的物理页信息 page
查看当前任务的页表信息       info tab
显示物理地址  xp
显示线性地址  x
线性地址设置短点 lb 或者 vb
------------------------
TCB 0x80101000
            06 可用的线性地址
	    10 LDT选择子 	0x68
            0c LDT线性地址	0x200000
            14 TSS的线性地址 
	    12 TSS的界限值 

TSS 0x8010200
---------------------------------
0x413cf 进入内核
0x41467 准备分页
0x414c3 开启分页
0x41543 更新分页完毕，跳转刷新到flush
0x415a2 为程序管理器的TSS分配内存空间
0x415db 创建程序管理器的TSS描述符，并安装到GDT中
0x415ff 创建用户任务的任务控制块
0x4162f 准备调取用户程序
--0x410a8 开始分配内存并加载用户程序
--0x41111 在内核地址空间内创建用户任务的TSS
--0x4113a 在用户任务的局部地址空间内创建LDT
--0x4130a 在GDT中登记LDT描述符

17-----------------------------------------------------
0x7cb0 打开分页机制
0x7ceb 正式打开分页功能
0x7d22 引导进入内核
0x40dab 进入内核start
0x40dfc 设置实时时钟中断处理过程
0x40efc 安装门
0x40f36 测试门
0x40fec 加载用户程序
0x40af5 开始分配内存并加载用户程序
0x40b4e 在内核地址空间内创建用户任务的TSS
0x40d70 创建用户任务的页目录
-------------------------------------------------
第一个进程的TCB线性地址 0x80101000
第一个进程的TSS线性地址 0x80102000 必须在内核空间分配
第一个进程的LDT线性地址 0x00001000 对应物理地址 0x3b000
第一个进程的目录的物理地址 0x105000

第二个进程的TCB线性地址 0x80103000
第二个进程的TSS线性地址 0x80104000 必须在内核空间分配
第二个进程的LDT线性地址 0x00001000 对应物理地址 0x10f000
第二个进程的目录的物理地址 0x119000
